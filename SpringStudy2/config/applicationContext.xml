<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<bean name="userService" class="com.xx.service.impl.UserServiceImpl"></bean>
	
	<!-- 配置切面类 -->
	<bean id="myAspectXml" class="com.xx.aspect.MyAspectXml"></bean>
		<!-- 进行 aop 的配置 -->
	<aop:config>
		<!-- 配置切入点表达式:哪些类的哪些方法需要进行增强 -->
		<!-- execution(表达式)
			表达式:
			[方法访问修饰符] 方法返回值 包名.类名.方法名(方法的参数) -->
		<aop:pointcut expression="execution(* com.xx.service.impl.UserServiceImpl.*(..))" id="pointcut"/>
		<!-- 配置切面 -->
		<aop:aspect ref="myAspectXml">
			<!-- 指定名为before方法作为前置通知 -->
			<aop:before method="before" pointcut-ref="pointcut"/>
			<!-- 后置 -->
			<aop:after-returning method="afterReturning" pointcut-ref="pointcut" />
			<!-- 环绕通知 -->
			<aop:around method="around" pointcut-ref="pointcut" />
			<!-- 异常拦截通知 -->
			<aop:after-throwing method="afterException" pointcut-ref="pointcut"/>
			<!-- 后置 -->
			<aop:after method="after" pointcut-ref="pointcut"/>
		</aop:aspect>
			
	</aop:config>
							
	<!-- 使用注解方式 -->								
	<bean name="MyAspectAnnotaion" class="com.xx.aspect.MyAspectAnnotation"></bean>
	<!-- 3.开启使用注解完成织入 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>